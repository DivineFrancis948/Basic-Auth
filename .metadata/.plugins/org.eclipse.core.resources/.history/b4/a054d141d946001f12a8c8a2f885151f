package com.example.demo.config;

import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.security.SecurityProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.core.annotation.Order;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

@EnableWebSecurity
public class SecurityConfig {
	

	@Autowired
	JwtAuthFilter jwtAuthFilter;
	
	private final static  List<UserDetails> APPLCATION_USERS =  Arrays.asList(
			
			new User(
					"df@gmail.com",
					"1234",
					Collections.singleton(new SimpleGrantedAuthority("ROLE_ADMIN"))
					
					),
			new User(
					"kf@gmail.com",
					"1234",
					Collections.singleton(new SimpleGrantedAuthority("ROLE_USER"))
					
					)
			
			);
	
	@Bean
	@Order(SecurityProperties.BASIC_AUTH_ORDER)
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
		
		http
		.authorizeRequests()
		.anyRequest()
		.authenticated()
		.and()
		.addFilterBefore(jwtAuthFilter,UsernamePasswordAuthenticationFilter.class);
//		.http.formLogin() // we remove the login
//		.http.httpBasic();
		return http.build();
		
	}
	
	@Bean
	public UserDetailsService userDetailsService() {
		return new UserDetailsService() {
			
			@Override
			public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
				// TODO Auto-generated method stub
				return null;
			}
		};
	}
	

}
